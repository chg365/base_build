# 日志轮询周期，hourly, weekly,monthly,yearly
daily
# 0 周日 1 周一,.., 6 周六, 7 每天,默认值为0
#weekly [weekday]

# 只有超过100M时分割，单位K,M,G，优先级高于daily +100M ?
#size 100M
# 日志体积大于此值时转储(例如:100K,4M), 会考虑日志文件的大小和时间戳, 时间间隔优先
#minsize 15M
# 日志体积大于此值时转储, 会考虑日志文件的大小和时间戳,优先于时间间隔
#maxsize

# 指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份
#rotate 30
# 开始计数的数字,如9，则跳过0-8
#start count
# 保留多少天的日志
maxage  30
# 不要转储小于<count>天的日志。
#minage count

# 使用shred -u 代替 unlink, 粉碎文件？
#shred
#noshred
# 删除之前覆盖次数
# shredcycles count

#
#su user group

# 不需要压缩时,用这个参数;
nocompress
# 通过gzip 压缩转储以后的日志,默认值
#compress
# 指定用于压缩日志文件的命令。缺省值是gzip
# compresscmd
# 指定用于解压日志文件的命令。缺省值是gunzip
# uncompresscmd
# 指定在压缩日志文件上使用哪个扩展（如果启用压缩）。默认值遵循配置的压缩命令。
# compressext
# 如果正在使用命令行选项，则可以将其传递给压缩程序。对于gzip（1），默认值为“-6”（偏向高压缩速度）。如果您使用不同的压缩命令，则可能需要更改压缩选项以匹配。
# compressoptions
# 切割时对上次的日志文件进行压缩,主要是用于防止不能告之程序打开新的日志文件
#delaycompress
# 覆盖delaycompress选项，转储同时压缩
#nodelaycompress

# 日志文件切割时添加日期后缀
dateext
# nodateext
# 配合dateext使用可以为切割后的日志加上YYYYMMDD格式的日期;
# %Y %m %d %H %M %S %V %s
# 默认值是 -%Y%m%d, 每小时使用 -%Y%m%d%H 作为默认值。
dateformat .%Y%m%d.%s

# 使用昨天而不是今天的日期来创建dateext扩展名，以便旋转的日志文件的名称中包含与其中的时间戳相同的日期。
dateyesterday

#使用一小时前的日期来创建扩展名,主要用于按小时转储
#datehourago

# 如果没有日志文件也不报错
missingok
#nomissingok

# 即使是空文件也转储，这个是logrotate的缺省选项；
#ifempty
# 日志为空时不进行切换，默认为ifempty
notifempty

# 转储后的日志文件和当前日志文件放在同一个目录下;
#noolddir
# 转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统
olddir LOG_DIR/backup
# 如果olddir指令指定的目录不存在，则会创建该目录。
createolddir 640 root root
# 禁用createolddir
#nocreateolddir
#
# 引入其他的配置文件, 忽略tabooext或taboopat指令中的文件
# include (file or directory)
# 不转储指定扩展名的文件, + 表示追加，没有则是替换
# tabooext [+] list
# 禁止通配符
# taboopat [+] list

extension .log
#
#addextension .log

# 转储时的错误信息发送到指定的Email地址;
#errors root@test.com
# 把转储的日志文件发送到指定的E-mail地 (当转储的日志因过期要删除时, 看mailfirst或maillast);
#mail root@test.com
# 使用邮件命令时，邮寄刚转储的文件，而不是即将到期的文件。
# mailfirst
#  使用邮件命令时，请发送about-to-expire文件，而不是刚旋转的文件（这是默认文件）。
#  maillast
# 转储时不发送日志文件;
nomail

#
#copy
#nocopy

#renamecopy

# 用于还在打开中的日志文件，把当前日志备份并截断,有丢日志的风险
#copytruncate
# 备份日志文件但是不截断
#nocopytruncate
#
# 转储文件，使用指定的文件模式创建新的日志文件,任何日志文件属性都可以省略，在这种情况下，新文件的这些属性将使用与原始日志文件相同的值作为省略属性。
#create 640 owner group
# 不建立新的日志文件;
#nocreate


LOG_DIR/nginx/*.log {
    #create 640 root root
    create
    olddir LOG_DIR/backup/nginx

    #只有在至少有一个脚本运行之前, 在prerotate脚本之前执行
    #firstaction/endscript
    #只有当至少有一个脚本运行后, postrotate后执行
    #lastaction/endscript
    # 在删除日志文件之前
    #preremove/endscript

    # 在转储以前需要执行的命令可以放入这个对,这两个关键字必须单独成行;
    #prerotate/endscript

    # 所有的文件切割之后只执行一次下面脚本
    sharedscripts
    #nosharedscripts
    # 在转储以后需要执行的命令可以放入这个对,这两个关键字必须单独成行
    postrotate
        if [ -f RUN_DIR/nginx/nginx.pid ]; then
            kill -USR1 `cat RUN_DIR/nginx/nginx.pid`
        fi
    endscript
}

# php-fpm
LOG_DIR/php-fpm/*.log {
    #create 640 root root
    create
    olddir LOG_DIR/backup/php-fpm

    sharedscripts
    postrotate
        if [ -f RUN_DIR/php-fpm.pid ]; then
            kill -USR1 `cat RUN_DIR/php-fpm.pid`
        fi
    endscript
}

LOG_DIR/*.log {
    nocreate
}

LOG_DIR/swoole/swoole.log {
    #create 640 nobody nobody
    create
    olddir LOG_DIR/backup/swoole

    sharedscripts
    postrotate
        eo_pid=`pgrep -f eo_office_master`;
        if [ "$eo_pid" != "" ];then
            kill -34 $eo_pid
        fi
    endscript
}


#/usr/local/mysql/bin/mysqladmin -uroot -p'password' flush-logs
